{"id":"../../node_modules/stripe/lib/resources/Accounts.js","dependencies":[{"name":"D:\\Programing\\starter\\package.json","includedInParent":true,"mtime":1745002180389},{"name":"D:\\Programing\\starter\\node_modules\\stripe\\package.json","includedInParent":true,"mtime":1745002180303},{"name":"../StripeResource","loc":{"line":3,"column":31,"index":46},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\resources\\Accounts.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\StripeResource.js"}],"generated":{"js":"'use strict';\n\nvar StripeResource = require('../StripeResource');\nvar stripeMethod = StripeResource.method;\nmodule.exports = StripeResource.extend({\n  // Since path can either be `account` or `accounts`, support both through stripeMethod path\n\n  create: stripeMethod({\n    method: 'POST',\n    path: 'accounts'\n  }),\n  list: stripeMethod({\n    method: 'GET',\n    path: 'accounts',\n    methodType: 'list'\n  }),\n  update: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{id}'\n  }),\n  // Avoid 'delete' keyword in JS\n  del: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{id}'\n  }),\n  reject: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{id}/reject'\n  }),\n  retrieve: function (id) {\n    // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n    // old account ids and api keys. To request the account for an api key, send null as the id\n    if (typeof id === 'string') {\n      return stripeMethod({\n        method: 'GET',\n        path: 'accounts/{id}'\n      }).apply(this, arguments);\n    } else {\n      if (id === null || id === undefined) {\n        // Remove id as stripeMethod would complain of unexpected argument\n        [].shift.apply(arguments);\n      }\n      return stripeMethod({\n        method: 'GET',\n        path: 'account'\n      }).apply(this, arguments);\n    }\n  },\n  /**\n   * Accounts: Capability methods\n   */\n\n  listCapabilities: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{accountId}/capabilities',\n    methodType: 'list'\n  }),\n  retrieveCapability: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{accountId}/capabilities/{capabilityId}'\n  }),\n  updateCapability: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/capabilities/{capabilityId}'\n  }),\n  /**\n   * Accounts: External account methods\n   */\n\n  createExternalAccount: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/external_accounts'\n  }),\n  listExternalAccounts: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{accountId}/external_accounts',\n    methodType: 'list'\n  }),\n  retrieveExternalAccount: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{accountId}/external_accounts/{externalAccountId}'\n  }),\n  updateExternalAccount: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/external_accounts/{externalAccountId}'\n  }),\n  deleteExternalAccount: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{accountId}/external_accounts/{externalAccountId}'\n  }),\n  /**\n   * Accounts: LoginLink methods\n   */\n\n  createLoginLink: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/login_links'\n  }),\n  /**\n   * Accounts: Person methods\n   */\n\n  createPerson: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/persons'\n  }),\n  listPersons: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{accountId}/persons',\n    methodType: 'list'\n  }),\n  retrievePerson: stripeMethod({\n    method: 'GET',\n    path: 'accounts/{accountId}/persons/{personId}'\n  }),\n  updatePerson: stripeMethod({\n    method: 'POST',\n    path: 'accounts/{accountId}/persons/{personId}'\n  }),\n  deletePerson: stripeMethod({\n    method: 'DELETE',\n    path: 'accounts/{accountId}/persons/{personId}'\n  })\n});"},"sourceMaps":null,"error":null,"hash":"a5814ecf6fa609d86642dc965a2ca26a","cacheData":{"env":{}}}