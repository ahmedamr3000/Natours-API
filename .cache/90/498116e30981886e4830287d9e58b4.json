{"id":"../../node_modules/browserify-sign/browser/index.js","dependencies":[{"name":"D:\\Programing\\starter\\package.json","includedInParent":true,"mtime":1745028222073},{"name":"D:\\Programing\\starter\\node_modules\\browserify-sign\\package.json","includedInParent":true,"mtime":1744662624456},{"name":"safe-buffer","loc":{"line":3,"column":21,"index":36},"parent":"D:\\Programing\\starter\\node_modules\\browserify-sign\\browser\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\safe-buffer\\index.js"},{"name":"create-hash","loc":{"line":4,"column":25,"index":84},"parent":"D:\\Programing\\starter\\node_modules\\browserify-sign\\browser\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\create-hash\\browser.js"},{"name":"readable-stream","loc":{"line":5,"column":21,"index":121},"parent":"D:\\Programing\\starter\\node_modules\\browserify-sign\\browser\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\browserify-sign\\node_modules\\readable-stream\\readable-browser.js"},{"name":"inherits","loc":{"line":6,"column":23,"index":164},"parent":"D:\\Programing\\starter\\node_modules\\browserify-sign\\browser\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\inherits\\inherits_browser.js"},{"name":"./sign","loc":{"line":7,"column":19,"index":196},"parent":"D:\\Programing\\starter\\node_modules\\browserify-sign\\browser\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\browserify-sign\\browser\\sign.js"},{"name":"./verify","loc":{"line":8,"column":21,"index":228},"parent":"D:\\Programing\\starter\\node_modules\\browserify-sign\\browser\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\browserify-sign\\browser\\verify.js"},{"name":"./algorithms.json","loc":{"line":10,"column":25,"index":267},"parent":"D:\\Programing\\starter\\node_modules\\browserify-sign\\browser\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\browserify-sign\\browser\\algorithms.json"}],"generated":{"js":"\n'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar createHash = require('create-hash');\nvar stream = require('readable-stream');\nvar inherits = require('inherits');\nvar sign = require('./sign');\nvar verify = require('./verify');\nvar algorithms = require('./algorithms.json');\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');\n  algorithms[key.toLowerCase()] = algorithms[key];\n});\nfunction Sign(algorithm) {\n  stream.Writable.call(this);\n  var data = algorithms[algorithm];\n  if (!data) {\n    throw new Error('Unknown message digest');\n  }\n  this._hashType = data.hash;\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Sign, stream.Writable);\nSign.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\nSign.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n  return this;\n};\nSign.prototype.sign = function signMethod(key, enc) {\n  this.end();\n  var hash = this._hash.digest();\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag);\n  return enc ? sig.toString(enc) : sig;\n};\nfunction Verify(algorithm) {\n  stream.Writable.call(this);\n  var data = algorithms[algorithm];\n  if (!data) {\n    throw new Error('Unknown message digest');\n  }\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Verify, stream.Writable);\nVerify.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\nVerify.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n  return this;\n};\nVerify.prototype.verify = function verifyMethod(key, sig, enc) {\n  var sigBuffer = typeof sig === 'string' ? Buffer.from(sig, enc) : sig;\n  this.end();\n  var hash = this._hash.digest();\n  return verify(sigBuffer, hash, key, this._signType, this._tag);\n};\nfunction createSign(algorithm) {\n  return new Sign(algorithm);\n}\nfunction createVerify(algorithm) {\n  return new Verify(algorithm);\n}\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n};"},"sourceMaps":null,"error":null,"hash":"0bfce53affa568903c29fc3244395c62","cacheData":{"env":{}}}