{"id":"../../node_modules/side-channel/index.js","dependencies":[{"name":"D:\\Programing\\starter\\package.json","includedInParent":true,"mtime":1745002180389},{"name":"D:\\Programing\\starter\\node_modules\\side-channel\\package.json","includedInParent":true,"mtime":1736195168000},{"name":"es-errors/type","loc":{"line":3,"column":25,"index":40},"parent":"D:\\Programing\\starter\\node_modules\\side-channel\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\es-errors\\type.js"},{"name":"object-inspect","loc":{"line":4,"column":22,"index":81},"parent":"D:\\Programing\\starter\\node_modules\\side-channel\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\object-inspect\\index.js"},{"name":"side-channel-list","loc":{"line":5,"column":33,"index":133},"parent":"D:\\Programing\\starter\\node_modules\\side-channel\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\side-channel-list\\index.js"},{"name":"side-channel-map","loc":{"line":6,"column":32,"index":187},"parent":"D:\\Programing\\starter\\node_modules\\side-channel\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\side-channel-map\\index.js"},{"name":"side-channel-weakmap","loc":{"line":7,"column":36,"index":244},"parent":"D:\\Programing\\starter\\node_modules\\side-channel\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\side-channel-weakmap\\index.js"}],"generated":{"js":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n  /** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n  /** @type {Channel | undefined} */var $channelData;\n\n  /** @type {Channel} */\n  var channel = {\n    assert: function (key) {\n      if (!channel.has(key)) {\n        throw new $TypeError('Side channel does not contain ' + inspect(key));\n      }\n    },\n    'delete': function (key) {\n      return !!$channelData && $channelData['delete'](key);\n    },\n    get: function (key) {\n      return $channelData && $channelData.get(key);\n    },\n    has: function (key) {\n      return !!$channelData && $channelData.has(key);\n    },\n    set: function (key, value) {\n      if (!$channelData) {\n        $channelData = makeChannel();\n      }\n      $channelData.set(key, value);\n    }\n  };\n  // @ts-expect-error TODO: figure out why this is erroring\n  return channel;\n};"},"sourceMaps":null,"error":null,"hash":"1c209fdfb29bcf29b7aac8034687aba9","cacheData":{"env":{}}}