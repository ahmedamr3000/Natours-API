{"id":"../../node_modules/stripe/lib/stripe.js","dependencies":[{"name":"D:\\Programing\\starter\\package.json","includedInParent":true,"mtime":1745002180389},{"name":"D:\\Programing\\starter\\node_modules\\stripe\\package.json","includedInParent":true,"mtime":1745002180303},{"name":"./resources","loc":{"line":3,"column":26,"index":41},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\stripe.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\resources.js"},{"name":"http","loc":{"line":11,"column":33,"index":262},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\stripe.js","resolved":"D:\\Programing\\starter\\node_modules\\stream-http\\index.js"},{"name":"../package.json","loc":{"line":13,"column":33,"index":328},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\stripe.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\package.json"},{"name":"events","loc":{"line":31,"column":29,"index":769},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\stripe.js","resolved":"D:\\Programing\\starter\\node_modules\\events\\events.js"},{"name":"./utils","loc":{"line":32,"column":22,"index":815},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\stripe.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\utils.js"},{"name":"./StripeResource","loc":{"line":34,"column":32,"index":860},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\stripe.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\StripeResource.js"},{"name":"./Error","loc":{"line":75,"column":24,"index":1817},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\stripe.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\Error.js"},{"name":"./Webhooks","loc":{"line":76,"column":26,"index":1855},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\stripe.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\Webhooks.js"},{"name":"process","parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\stripe.js","resolved":"D:\\Programing\\starter\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar resources = require('./resources');\nStripe.DEFAULT_HOST = 'api.stripe.com';\nStripe.DEFAULT_PORT = '443';\nStripe.DEFAULT_BASE_PATH = '/v1/';\nStripe.DEFAULT_API_VERSION = null;\n\n// Use node's default timeout:\nStripe.DEFAULT_TIMEOUT = require('http').createServer().timeout;\nStripe.PACKAGE_VERSION = require('../package.json').version;\nStripe.USER_AGENT = {\n  bindings_version: Stripe.PACKAGE_VERSION,\n  lang: 'node',\n  lang_version: process.version,\n  platform: process.platform,\n  publisher: 'stripe',\n  uname: null\n};\nStripe.USER_AGENT_SERIALIZED = null;\nStripe.MAX_NETWORK_RETRY_DELAY_SEC = 2;\nStripe.INITIAL_NETWORK_RETRY_DELAY_SEC = 0.5;\nvar APP_INFO_PROPERTIES = ['name', 'version', 'url', 'partner_id'];\nvar EventEmitter = require('events').EventEmitter;\nvar utils = require('./utils');\nStripe.StripeResource = require('./StripeResource');\nStripe.resources = resources;\nfunction Stripe(key, version) {\n  if (!(this instanceof Stripe)) {\n    return new Stripe(key, version);\n  }\n  Object.defineProperty(this, '_emitter', {\n    value: new EventEmitter(),\n    enumerable: false,\n    configurable: false,\n    writeable: false\n  });\n  this.on = this._emitter.on.bind(this._emitter);\n  this.off = this._emitter.removeListener.bind(this._emitter);\n  this._api = {\n    auth: null,\n    host: Stripe.DEFAULT_HOST,\n    port: Stripe.DEFAULT_PORT,\n    basePath: Stripe.DEFAULT_BASE_PATH,\n    version: Stripe.DEFAULT_API_VERSION,\n    timeout: Stripe.DEFAULT_TIMEOUT,\n    agent: null,\n    dev: false,\n    maxNetworkRetries: 0\n  };\n  this._prepResources();\n  this.setApiKey(key);\n  this.setApiVersion(version);\n  this.errors = require('./Error');\n  this.webhooks = require('./Webhooks');\n  this._prevRequestMetrics = [];\n  this.setTelemetryEnabled(false);\n}\nStripe.errors = require('./Error');\nStripe.webhooks = require('./Webhooks');\nStripe.prototype = {\n  setHost: function (host, port, protocol) {\n    this._setApiField('host', host);\n    if (port) {\n      this.setPort(port);\n    }\n    if (protocol) {\n      this.setProtocol(protocol);\n    }\n  },\n  setProtocol: function (protocol) {\n    this._setApiField('protocol', protocol.toLowerCase());\n  },\n  setPort: function (port) {\n    this._setApiField('port', port);\n  },\n  setApiVersion: function (version) {\n    if (version) {\n      this._setApiField('version', version);\n    }\n  },\n  setApiKey: function (key) {\n    if (key) {\n      this._setApiField('auth', \"Bearer \".concat(key));\n    }\n  },\n  setTimeout: function (timeout) {\n    this._setApiField('timeout', timeout == null ? Stripe.DEFAULT_TIMEOUT : timeout);\n  },\n  setAppInfo: function (info) {\n    if (info && _typeof(info) !== 'object') {\n      throw new Error('AppInfo must be an object.');\n    }\n    if (info && !info.name) {\n      throw new Error('AppInfo.name is required');\n    }\n    info = info || {};\n    var appInfo = APP_INFO_PROPERTIES.reduce(function (accum, prop) {\n      if (typeof info[prop] == 'string') {\n        accum = accum || {};\n        accum[prop] = info[prop];\n      }\n      return accum;\n    }, undefined);\n\n    // Kill the cached UA string because it may no longer be valid\n    Stripe.USER_AGENT_SERIALIZED = undefined;\n    this._appInfo = appInfo;\n  },\n  setHttpAgent: function (agent) {\n    this._setApiField('agent', agent);\n  },\n  _setApiField: function (key, value) {\n    this._api[key] = value;\n  },\n  getApiField: function (key) {\n    return this._api[key];\n  },\n  setClientId: function (clientId) {\n    this._clientId = clientId;\n  },\n  getClientId: function () {\n    return this._clientId;\n  },\n  getConstant: function (c) {\n    return Stripe[c];\n  },\n  getMaxNetworkRetries: function () {\n    return this.getApiField('maxNetworkRetries');\n  },\n  setMaxNetworkRetries: function (maxNetworkRetries) {\n    if (maxNetworkRetries && typeof maxNetworkRetries !== 'number' || arguments.length < 1) {\n      throw new Error('maxNetworkRetries must be a number.');\n    }\n    this._setApiField('maxNetworkRetries', maxNetworkRetries);\n  },\n  getMaxNetworkRetryDelay: function () {\n    return this.getConstant('MAX_NETWORK_RETRY_DELAY_SEC');\n  },\n  getInitialNetworkRetryDelay: function () {\n    return this.getConstant('INITIAL_NETWORK_RETRY_DELAY_SEC');\n  },\n  // Gets a JSON version of a User-Agent and uses a cached version for a slight\n  // speed advantage.\n  getClientUserAgent: function (cb) {\n    if (Stripe.USER_AGENT_SERIALIZED) {\n      return cb(Stripe.USER_AGENT_SERIALIZED);\n    }\n    this.getClientUserAgentSeeded(Stripe.USER_AGENT, function (cua) {\n      Stripe.USER_AGENT_SERIALIZED = cua;\n      cb(Stripe.USER_AGENT_SERIALIZED);\n    });\n  },\n  // Gets a JSON version of a User-Agent by encoding a seeded object and\n  // fetching a uname from the system.\n  getClientUserAgentSeeded: function (seed, cb) {\n    var self = this;\n    utils.safeExec('uname -a', function (err, uname) {\n      var userAgent = {};\n      for (var field in seed) {\n        userAgent[field] = encodeURIComponent(seed[field]);\n      }\n\n      // URI-encode in case there are unusual characters in the system's uname.\n      userAgent.uname = encodeURIComponent(uname || 'UNKNOWN');\n      if (self._appInfo) {\n        userAgent.application = self._appInfo;\n      }\n      cb(JSON.stringify(userAgent));\n    });\n  },\n  getAppInfoAsString: function () {\n    if (!this._appInfo) {\n      return '';\n    }\n    var formatted = this._appInfo.name;\n    if (this._appInfo.version) {\n      formatted += \"/\".concat(this._appInfo.version);\n    }\n    if (this._appInfo.url) {\n      formatted += \" (\".concat(this._appInfo.url, \")\");\n    }\n    return formatted;\n  },\n  setTelemetryEnabled: function (enableTelemetry) {\n    this._enableTelemetry = enableTelemetry;\n  },\n  getTelemetryEnabled: function () {\n    return this._enableTelemetry;\n  },\n  _prepResources: function () {\n    for (var name in resources) {\n      this[utils.pascalToCamelCase(name)] = new resources[name](this);\n    }\n  }\n};\nmodule.exports = Stripe;\n// expose constructor as a named property to enable mocking with Sinon.JS\nmodule.exports.Stripe = Stripe;"},"sourceMaps":null,"error":null,"hash":"575d4f14dbaaaf3bdb82aa1268d42449","cacheData":{"env":{}}}