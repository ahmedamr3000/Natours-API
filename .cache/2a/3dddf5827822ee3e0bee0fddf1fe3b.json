{"id":"../../node_modules/browserify-rsa/index.js","dependencies":[{"name":"D:\\Programing\\starter\\package.json","includedInParent":true,"mtime":1745028222073},{"name":"D:\\Programing\\starter\\node_modules\\browserify-rsa\\package.json","includedInParent":true,"mtime":1744662610224},{"name":"bn.js","loc":{"line":3,"column":17,"index":32},"parent":"D:\\Programing\\starter\\node_modules\\browserify-rsa\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\bn.js\\lib\\bn.js"},{"name":"randombytes","loc":{"line":4,"column":26,"index":68},"parent":"D:\\Programing\\starter\\node_modules\\browserify-rsa\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\randombytes\\browser.js"},{"name":"safe-buffer","loc":{"line":5,"column":21,"index":105},"parent":"D:\\Programing\\starter\\node_modules\\browserify-rsa\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\safe-buffer\\index.js"}],"generated":{"js":"\n'use strict';\n\nvar BN = require('bn.js');\nvar randomBytes = require('randombytes');\nvar Buffer = require('safe-buffer').Buffer;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r;\n  do {\n    r = new BN(randomBytes(len));\n  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));\n  return r;\n}\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder: r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(BN.mont(priv.prime1));\n  var c2 = blinded.toRed(BN.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1).fromRed();\n  var m2 = c2.redPow(priv.exponent2).fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p).imul(q);\n  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len);\n}\ncrt.getr = getr;\nmodule.exports = crt;"},"sourceMaps":null,"error":null,"hash":"4062a860ce3aaff0931884a70dc069c8","cacheData":{"env":{}}}