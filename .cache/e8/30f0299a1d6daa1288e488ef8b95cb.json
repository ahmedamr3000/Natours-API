{"id":"../../node_modules/stripe/lib/resources/Files.js","dependencies":[{"name":"D:\\Programing\\starter\\package.json","includedInParent":true,"mtime":1745002180389},{"name":"D:\\Programing\\starter\\node_modules\\stripe\\package.json","includedInParent":true,"mtime":1745002180303},{"name":"safe-buffer","loc":{"line":3,"column":23,"index":38},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\resources\\Files.js","resolved":"D:\\Programing\\starter\\node_modules\\safe-buffer\\index.js"},{"name":"../utils","loc":{"line":4,"column":22,"index":83},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\resources\\Files.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\utils.js"},{"name":"../MultipartDataGenerator","loc":{"line":5,"column":39,"index":135},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\resources\\Files.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\MultipartDataGenerator.js"},{"name":"../Error","loc":{"line":6,"column":22,"index":187},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\resources\\Files.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\Error.js"},{"name":"../StripeResource","loc":{"line":7,"column":31,"index":231},"parent":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\resources\\Files.js","resolved":"D:\\Programing\\starter\\node_modules\\stripe\\lib\\StripeResource.js"}],"generated":{"js":"\n'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar utils = require('../utils');\nvar multipartDataGenerator = require('../MultipartDataGenerator');\nvar Error = require('../Error');\nvar StripeResource = require('../StripeResource');\nvar stripeMethod = StripeResource.method;\nmodule.exports = StripeResource.extend({\n  path: 'files',\n  includeBasic: ['list', 'retrieve'],\n  requestDataProcessor: function (method, data, headers, callback) {\n    data = data || {};\n    if (method === 'POST') {\n      return getProcessorForSourceType(data);\n    } else {\n      return callback(null, utils.stringifyRequestData(data));\n    }\n    function getProcessorForSourceType(data) {\n      var isStream = utils.checkForStream(data);\n      if (isStream) {\n        return streamProcessor(multipartDataGenerator);\n      } else {\n        var buffer = multipartDataGenerator(method, data, headers);\n        return callback(null, buffer);\n      }\n    }\n    function streamProcessor(fn) {\n      var bufferArray = [];\n      data.file.data.on('data', function (line) {\n        bufferArray.push(line);\n      }).on('end', function () {\n        var bufferData = Object.assign({}, data);\n        bufferData.file.data = Buffer.concat(bufferArray);\n        var buffer = fn(method, bufferData, headers);\n        callback(null, buffer);\n      }).on('error', function (err) {\n        var errorHandler = streamError(callback);\n        errorHandler(err);\n      });\n    }\n    function streamError(callback) {\n      var StreamProcessingError = Error.extend({\n        type: 'StreamProcessingError',\n        populate: function (raw) {\n          this.type = this.type;\n          this.message = raw.message;\n          this.detail = raw.detail;\n        }\n      });\n      return function (error) {\n        callback(new StreamProcessingError({\n          message: 'An error occurred while attempting to process the file for upload.',\n          detail: error\n        }), null);\n      };\n    }\n  },\n  create: stripeMethod({\n    method: 'POST',\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    },\n    host: 'files.stripe.com'\n  })\n});"},"sourceMaps":null,"error":null,"hash":"7639f90082f0065bf0665659162cb16f","cacheData":{"env":{}}}