{"id":"../../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js","dependencies":[{"name":"D:\\Programing\\starter\\package.json","includedInParent":true,"mtime":1745028222073},{"name":"D:\\Programing\\starter\\node_modules\\stream-browserify\\node_modules\\readable-stream\\package.json","includedInParent":true,"mtime":1744662631363},{"name":"safe-buffer","loc":{"line":5,"column":21,"index":191},"parent":"D:\\Programing\\starter\\node_modules\\stream-browserify\\node_modules\\readable-stream\\lib\\internal\\streams\\BufferList.js","resolved":"D:\\Programing\\starter\\node_modules\\stream-browserify\\node_modules\\safe-buffer\\index.js"},{"name":"util","loc":{"line":6,"column":19,"index":233},"parent":"D:\\Programing\\starter\\node_modules\\stream-browserify\\node_modules\\readable-stream\\lib\\internal\\streams\\BufferList.js","resolved":"D:\\Programing\\starter\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"}],"generated":{"js":"\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}"},"sourceMaps":null,"error":null,"hash":"4d1e39a11814465b2642eb64fa7a5fff","cacheData":{"env":{}}}