{"id":"../../node_modules/call-bind-apply-helpers/index.js","dependencies":[{"name":"D:\\Programing\\starter\\package.json","includedInParent":true,"mtime":1745002180389},{"name":"D:\\Programing\\starter\\node_modules\\call-bind-apply-helpers\\package.json","includedInParent":true,"mtime":1744662623138},{"name":"function-bind","loc":{"line":3,"column":19,"index":34},"parent":"D:\\Programing\\starter\\node_modules\\call-bind-apply-helpers\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\function-bind\\index.js"},{"name":"es-errors/type","loc":{"line":4,"column":25,"index":77},"parent":"D:\\Programing\\starter\\node_modules\\call-bind-apply-helpers\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\es-errors\\type.js"},{"name":"./functionCall","loc":{"line":6,"column":20,"index":117},"parent":"D:\\Programing\\starter\\node_modules\\call-bind-apply-helpers\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\call-bind-apply-helpers\\functionCall.js"},{"name":"./actualApply","loc":{"line":7,"column":27,"index":163},"parent":"D:\\Programing\\starter\\node_modules\\call-bind-apply-helpers\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\call-bind-apply-helpers\\actualApply.js"}],"generated":{"js":"'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n  if (args.length < 1 || typeof args[0] !== 'function') {\n    throw new $TypeError('a function is required');\n  }\n  return $actualApply(bind, $call, args);\n};"},"sourceMaps":null,"error":null,"hash":"76add59f10dd0364909c1a311a5a11d0","cacheData":{"env":{}}}