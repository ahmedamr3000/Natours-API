{"id":"../../node_modules/call-bound/index.js","dependencies":[{"name":"D:\\Programing\\starter\\package.json","includedInParent":true,"mtime":1745002180389},{"name":"D:\\Programing\\starter\\node_modules\\call-bound\\package.json","includedInParent":true,"mtime":1744662609089},{"name":"get-intrinsic","loc":{"line":3,"column":27,"index":42},"parent":"D:\\Programing\\starter\\node_modules\\call-bound\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\get-intrinsic\\index.js"},{"name":"call-bind-apply-helpers","loc":{"line":5,"column":28,"index":89},"parent":"D:\\Programing\\starter\\node_modules\\call-bound\\index.js","resolved":"D:\\Programing\\starter\\node_modules\\call-bind-apply-helpers\\index.js"}],"generated":{"js":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n  /* eslint no-extra-parens: 0 */\n\n  var intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */GetIntrinsic(name, !!allowMissing);\n  if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n    return callBindBasic(/** @type {const} */[intrinsic]);\n  }\n  return intrinsic;\n};"},"sourceMaps":null,"error":null,"hash":"c93d8a6e5df7951a30b38802912d6ba7","cacheData":{"env":{}}}